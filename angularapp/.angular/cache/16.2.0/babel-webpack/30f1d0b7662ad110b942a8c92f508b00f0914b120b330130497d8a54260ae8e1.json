{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nclass ConverterPipe {\n  constructor() {\n    this.currency = new Map([['USD', 1.126735], ['GBP', 0.876893], ['INR', 79.677056]]);\n  }\n  transform(source, target, amount) {\n    return this.currency.get(target) / this.currency.get(source) * amount;\n  }\n}\n_class = ConverterPipe;\n_class.ɵfac = function ConverterPipe_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"converter\",\n  type: _class,\n  pure: true\n});\nexport { ConverterPipe };","map":{"version":3,"names":["ConverterPipe","constructor","currency","Map","transform","source","target","amount","get","pure"],"sources":["/home/coder/project/workspace/angularapp/src/app/converter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'converter'\n})\nexport class ConverterPipe implements PipeTransform {\n  currency = new Map([ \n    ['USD', 1.126735],\n    ['GBP', 0.876893],\n    ['INR', 79.677056],\n  ]);\n\n  public transform(source: string, target: string, amount: number): number { \n    return (this.currency.get(target) / this.currency.get(source)) * amount;\n  }\n}\n"],"mappings":";;AAEA,MAGaA,aAAa;EAH1BC,YAAA;IAIE,KAAAC,QAAQ,GAAG,IAAIC,GAAG,CAAC,CACjB,CAAC,KAAK,EAAE,QAAQ,CAAC,EACjB,CAAC,KAAK,EAAE,QAAQ,CAAC,EACjB,CAAC,KAAK,EAAE,SAAS,CAAC,CACnB,CAAC;;EAEKC,SAASA,CAACC,MAAc,EAAEC,MAAc,EAAEC,MAAc;IAC7D,OAAQ,IAAI,CAACL,QAAQ,CAACM,GAAG,CAACF,MAAM,CAAC,GAAG,IAAI,CAACJ,QAAQ,CAACM,GAAG,CAACH,MAAM,CAAC,GAAIE,MAAM;EACzE;;SATWP,aAAa;;mBAAbA,MAAa;AAAA;;;QAAbA,MAAa;EAAAS,IAAA;AAAA;SAAbT,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}