{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nclass ConverterPipe {\n  constructor() {\n    this.currency = new Map([[\"USD\", 1.126735], [\"GBP\", 0.876893], [\"INR\", 79.677056]]);\n  }\n  transform(source, target, amount) {\n    if (!this.currency.has(source) || !this.currency.has(target)) {\n      throw new Error('Invalid currency code');\n    }\n    return this.currency.get(target) / this.currency.get(source) * amount;\n  }\n}\n_class = ConverterPipe;\n_class.ɵfac = function ConverterPipe_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"converter\",\n  type: _class,\n  pure: true\n});\nexport { ConverterPipe };","map":{"version":3,"names":["ConverterPipe","constructor","currency","Map","transform","source","target","amount","has","Error","get","pure"],"sources":["/home/coder/project/workspace/angularapp/src/app/converter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'converter'\n})\nexport class ConverterPipe implements PipeTransform {\n  private currency = new Map<string, number>([\n    [\"USD\", 1.126735],\n    [\"GBP\", 0.876893],\n    [\"INR\", 79.677056]\n  ]);\n\n  public transform(source: string, target: string, amount: number): number {\n    if (!this.currency.has(source) || !this.currency.has(target)) {\n      throw new Error('Invalid currency code');\n    }\n\n    return (this.currency.get(target)! / this.currency.get(source)!) * amount;\n  }\n}"],"mappings":";;AAEA,MAGaA,aAAa;EAH1BC,YAAA;IAIU,KAAAC,QAAQ,GAAG,IAAIC,GAAG,CAAiB,CACzC,CAAC,KAAK,EAAE,QAAQ,CAAC,EACjB,CAAC,KAAK,EAAE,QAAQ,CAAC,EACjB,CAAC,KAAK,EAAE,SAAS,CAAC,CACnB,CAAC;;EAEKC,SAASA,CAACC,MAAc,EAAEC,MAAc,EAAEC,MAAc;IAC7D,IAAI,CAAC,IAAI,CAACL,QAAQ,CAACM,GAAG,CAACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAACH,QAAQ,CAACM,GAAG,CAACF,MAAM,CAAC,EAAE;MAC5D,MAAM,IAAIG,KAAK,CAAC,uBAAuB,CAAC;;IAG1C,OAAQ,IAAI,CAACP,QAAQ,CAACQ,GAAG,CAACJ,MAAM,CAAE,GAAG,IAAI,CAACJ,QAAQ,CAACQ,GAAG,CAACL,MAAM,CAAE,GAAIE,MAAM;EAC3E;;SAbWP,aAAa;;mBAAbA,MAAa;AAAA;;;QAAbA,MAAa;EAAAW,IAAA;AAAA;SAAbX,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}